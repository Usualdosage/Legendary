@model StatModel

<script type="text/javascript">function check(input) {
        if (input.value != document.getElementById('password').value) {
            input.setCustomValidity('Passwords must match.');
        } else {
            input.setCustomValidity('');
        }
    }</script>

<script src="~/js/create.js" asp-append-version="true"></script>

<link rel="stylesheet" href="~/css/index.css" asp-append-version="true" />

@Html.AntiForgeryToken()

<div class="container" style="margin-top: 75px">
    <div class="row">
        <div class="col-md">
            <form action="@Url.Action("CreateCharacter")" method="post">
                <input name="submittalfield" class="visually-hidden" tabindex="-1" autocomplete="off">
                <div class="card text-center">
                    <div class="card-header">
                        <h4 class="card-title">Create a Character</h4>
                    </div>
                    <div class="card-body">
                        <div class="row" style="color: #000">
                            <p>
                                These are the required elements to create a character. Some things (like your description) can be changed or updated later. Your
                                stats are presently based on a maximum of 18, but they can be enhanced later on in the game depending on your racial abilities,
                                items, or skills.
                            </p>
                        </div>
                            <div class="row" style="color: #000">
                                <div class="col-md">
                                    Your vital stats:
                                </div>
                                <div class="col-md">
                                    STR: <span style="font-weight: bold" id="str">@Model.Str</span>
                                </div>
                                <div class="col-md">
                                    INT: <span style="font-weight: bold" id="int">@Model.Int</span>
                                </div>
                                <div class="col-md">
                                    WIS: <span style="font-weight: bold" id="wis">@Model.Wis</span>
                                </div>
                                <div class="col-md">
                                    DEX: <span style="font-weight: bold" id="dex">@Model.Dex</span>
                                </div>
                                <div class="col-md">
                                    CON: <span style="font-weight: bold" id="con">@Model.Con</span>
                                </div>
                                <div class="col-md">
                                    <input type="button" class="btn btn-primary" onClick="reroll()" value="Reroll" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input type="text" class="charinput" placeholder="First Name" name="FirstName" required />
                                </div>
                                <div class="col-md-3">
                                    <input type="text" class="charinput" placeholder="Last Name" name="LastName" />
                                </div>
                                <div class="col-md-3">
                                    <input id="password" type="password" class="charinput" required placeholder="Password" />
                                </div>
                                <div class="col-md-3">
                                    <input id="passwordConfirm" oninput="check(this)" type="password" class="charinput" placeholder="Confirm Password" name="Password" required />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <select name="Gender" required
                                            class="form-control"
                                            asp-items="Html.GetEnumSelectList<Legendary.Core.Types.Gender>()">
                                        <option value="">Select Gender</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <select id="ddlRace" class="form-control" asp-for="SelectedRace" asp-items="@(new SelectList(Model.PlayerRaces))"></select>
                                </div>
                                <div class="col-md-3">
                                    <select id="ddlAlign" class="form-control" asp-for="SelectedAlignment" asp-items="@(new SelectList(Model.Alignments))"></select>
                                </div>
                                <div class="col-md-3">
                                    <select name="Ethos" required
                                            class="form-control"
                                            asp-items="Html.GetEnumSelectList<Legendary.Core.Types.Ethos>()">
                                        <option value="">Select Ethos</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md">
                                    <textarea name="LongDescription" class="descinput" placeholder="Enter Description" required></textarea>
                                </div>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><input type="submit" class="btn btn-primary" value="Create" />&nbsp;<a class="btn btn-secondary" href="@Url.Action("Index")">Back</a></li>
                                <li class="list-group-item"><p class="alert">@Model.Message</p></li>
                            </ul>
                            <div class="card-footer">
                                &copy;2022-@DateTime.Now.Year Legendary
                            </div>
                        </div>
                    </div>
            </form>
        </div>
    </div>
</div>

<div class="modal" id="avatarModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" style="width:1340px;max-width: 100%;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color: #000; font-weight: bold">Build Your Avatar</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12" style="text-align: center;">
                            <iframe id="frame" width="1280" height="800" class="frame" allow="camera *; microphone *; clipboard-write"></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>const frame = document.getElementById('frame');

    frame.src = 'https://legendary.readyplayer.me/avatar?clearCache&bodyType=halfBody';

    window.addEventListener('message', subscribe);
    document.addEventListener('message', subscribe);

    function subscribe(event) {
        const json = parse(event);

        if (json.source !== 'readyplayerme') {
            return;
        }

        if (json.eventName === 'v1.frame.ready') {
            frame.contentWindow.postMessage(
                JSON.stringify({
                    target: 'readyplayerme',
                    type: 'subscribe',
                    eventName: 'v1.**'
                }),
                '*'
            );
        }

        // Get avatar GLB URL
        if (json.eventName === 'v1.avatar.exported') {
            console.log(`Avatar URL: ${json.data.url}`);
            document.getElementById('AvatarUrl').value = `${json.data.url}`;
            document.getElementById('frame').hidden = true;
        }

        // Get user id
        if (json.eventName === 'v1.user.set') {
            console.log(`User with id ${json.data.id} set: ${JSON.stringify(json)}`);
        }
    }

    function parse(event) {
        try {
            return JSON.parse(event.data);
        }
        catch (error) {
            return null;
        }
    }</script>